@startuml
skinparam {
   Maxmessagesize 200
}
group Grouping messages
    Test <- Test    : The group frame [now] does draw a border around the text (located on the left side), [no longer] ignores its presence, and also [no longer] ignores the presence of a line.
end
@enduml
@startuml
skinparam {
      Maxmessagesize 200
}

group Grouping messages
    Test <- Test : The group frame [now] does draw a border around the text (located on the left side), [no longer] ignores its presence, and also [no longer] ignores the presence of a line.
note right
  A note on the self message
endnote
end
@enduml
@startuml
skinparam {
      Maxmessagesize 200
}

group Grouping messages
    Test <- Test : The group frame [now] does draw a border around the text (located on the left side), [no longer] ignores its presence, and also [no longer] ignores the presence of a line.
note left
  A note on the self message
endnote
end
@enduml
@startuml
group
    a -> a : This works fine
end
group
    a <- a : This [now works]
end
@enduml
@startuml
Test --> Test: Text
note right: the location of the Comment is correct

Test --> Test: Text
note left: the location of the Comment is correct

Test <-- Test: Text
note right: the location of the Comment is [now correct]

Test <-- Test: Text
note left: the location of the Comment is [now correct]
@enduml
@startuml
!pragma teoz true
skinparam {
  Maxmessagesize 200
}

group Grouping messages
    Test <- Test    : The group frame [now] does draw a border around the text (located on the left side), [lo longer] ignores its presence, and [no longer]] ignores the presence of a line.
    note right
      A note on the self message
    endnote
end
@enduml
@startuml
'!pragma teoz true
skinparam {
  Maxmessagesize 200
}

group Grouping messages
    Test <- Test    : The group frame [now] does draw a border around the text (located on the left side), [lo longer] ignores its presence, and [no longer]] ignores the presence of a line.
    note left
      A note on the self message
    endnote
end
@enduml

@startuml
!pragma teoz true
skin rose
skinparam sequence {
ArrowColor Green
}
'Participant Test
'Participant Testing
'Participant Test2

Testing <- Testing #red: 1st self message, no activation
    note left
      A note on the self message
    endnote
Testing <- Testing ++: 2nd self message, starting activation
Testing <- Testing : 2.5th self message, no change
    note right
      A note on the self message
    endnote
Testing \\-- Testing ++: 3rd self message, staring another activation
Testing <<- Testing : 4th self message, continuing in the current activation
    note left
      A note on the self message
    endnote
Testing <- Testing --: 5th self message, deactivating once

Testing <- Testing : 6th self message, continuing the activation
Testing <- Testing --: 7th self message, exiting the activation
Testing <- Testing : 8th self message, no activation
@enduml